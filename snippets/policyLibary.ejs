<template>
  <div>
    政策列表
    <van-loading v-if="loading" color="#095ddc" text-color="#095ddc" vertical>
      加载中...
    </van-loading>
  </div>
</template>

<script>
import { format } from 'date-fns';
import { Loading } from 'vant';
export default {
  components: {
    [Loading.name]: Loading
  },
  data() {
    return {
      policyList: [],
      loading: false,
      pagination: {
        total: 0,
        pageSize: 5,
        current: 1,
        totalPage: 0
      }
    };
  },
  created() {
    this.getPolicyData();
  },
  methods: {
    async getPolicyData() {
      try {
        this.loading = true;
        const { data } = await this.$http({
          method: 'GET',
          url: this.$urlMapper.getPolicylibrary,
          params: {
            limit: this.pagination.pageSize,
            offset: (this.pagination.current - 1) * this.pagination.pageSize,
            <% for(let key in params) {
              %><%= key %>: '<%= params[key] %>',
            <%}%>}
        });
        this.loading = false;
        this.pagination.total = data.count;
        this.pagination.totalPage = Math.ceil(data.count / this.pagination.pageSize);
        this.policyList = data.data;
      } catch (error) {
        console.error(error || '获取政策列表失败');
      } finally {
        this.loading = false;
      }
    },
    dateFormat(date) {
      return format(new Date(date), 'yyyy-MM-dd');
    },
    toDetail(item) {
      const { url, hasContent, id } = item;
      // 先判断hasContent是否是0，字符串0则代表无正文,并且url存在
      this.$Tools._toUrl({ hasContent, url }, () => {
        this.$router.push({
          name: 'policyDetail',
          query: {
            id: id
          }
        });
      });
    },
    onChange() {
      if (this.pagination.current === this.pagination.totalPage) {
        this.pagination.current = 1;
      } else {
        this.pagination.current++;
      }
      this.getPolicyData();
    }
  }
};
</script>

<style lang="scss" scoped></style>
